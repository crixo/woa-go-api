package api

import (
	"log"
	"net/http"

	_ "github.com/crixo/woa-go-api/docs" // docs is generated by Swag CLI, you have to import it.
	httpSwagger "github.com/swaggo/http-swagger"

	"github.com/gorilla/mux"

	"github.com/crixo/woa-go-api/patients/deliveries"
	"github.com/crixo/woa-go-api/patients/repositories"
	"github.com/jinzhu/gorm"
	"github.com/rs/cors"
)

// HandleRequests registers all routes
func HandleRequests(db *gorm.DB) {
	myRouter := mux.NewRouter()

	myRouter.StrictSlash(true)

	r := repositories.NewGormPatientRepository(db)
	deliveries.NewPatientsHandler(myRouter, r)

	// @description users
	//myRouter.HandleFunc("/patients", patients).Methods("GET")
	// myRouter.HandleFunc("/user/{name}", deleteUser).Methods("DELETE")
	// myRouter.HandleFunc("/user/{name}/{email}", updateUser).Methods("PUT")
	// myRouter.HandleFunc("/user/{name}/{email}", newUser).Methods("POST")

	myRouter.PathPrefix("/swagger/").Handler(httpSwagger.Handler(
	//httpSwagger.URL("http://localhost:8081/swagger/doc.json"), //The url pointing to API definition"
	//httpSwagger.URL("swagger.json"),
	))
	//http.HandleFunc("/swagger/", httpSwagger.WrapHandler)
	//myRouter.HandleFunc("/swagger/", httpSwagger.WrapHandler)

	//cors optionsGoes Below
	corsOpts := cors.New(cors.Options{
		AllowedOrigins: []string{"*"}, //you service is available and allowed for this base url
		AllowedMethods: []string{
			http.MethodGet, //http methods for your app
			http.MethodPost,
			http.MethodPut,
			http.MethodPatch,
			http.MethodDelete,
			http.MethodOptions,
			http.MethodHead,
		},

		AllowedHeaders: []string{
			"*", //or you can your header key values which you are using in your application

		},
	})

	httpAddr := ":8081"
	log.Printf("starting webserver at %s\n", httpAddr)
	log.Fatal(http.ListenAndServe(httpAddr, corsOpts.Handler(myRouter)))
}
